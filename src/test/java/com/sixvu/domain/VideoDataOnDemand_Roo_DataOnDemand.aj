// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sixvu.domain;

import com.sixvu.domain.PersonDataOnDemand;
import com.sixvu.domain.Video;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

privileged aspect VideoDataOnDemand_Roo_DataOnDemand {
    
    declare @type: VideoDataOnDemand: @Component;
    
    private Random VideoDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Video> VideoDataOnDemand.data;
    
    @Autowired
    private PersonDataOnDemand VideoDataOnDemand.personDataOnDemand;
    
    public Video VideoDataOnDemand.getNewTransientVideo(int index) {
        com.sixvu.domain.Video obj = new com.sixvu.domain.Video();
        obj.setDateAdd(new java.util.Date());
        obj.setPerson(personDataOnDemand.getRandomPerson());
        java.lang.String title = "title_" + index;
        if (title.length() > 128) {
            title  = title.substring(0, 128);
        }
        obj.setTitle(title);
        return obj;
    }
    
    public Video VideoDataOnDemand.getSpecificVideo(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Video obj = data.get(index);
        return Video.findVideo(obj.getId());
    }
    
    public Video VideoDataOnDemand.getRandomVideo() {
        init();
        Video obj = data.get(rnd.nextInt(data.size()));
        return Video.findVideo(obj.getId());
    }
    
    public boolean VideoDataOnDemand.modifyVideo(Video obj) {
        return false;
    }
    
    @Transactional(propagation = Propagation.REQUIRES_NEW)
    public void VideoDataOnDemand.init() {
        if (data != null && !data.isEmpty()) {
            return;
        }
        
        data = com.sixvu.domain.Video.findVideoEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Video' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.sixvu.domain.Video>();
        for (int i = 0; i < 10; i++) {
            com.sixvu.domain.Video obj = getNewTransientVideo(i);
            obj.persist();
            data.add(obj);
        }
    }
    
}
