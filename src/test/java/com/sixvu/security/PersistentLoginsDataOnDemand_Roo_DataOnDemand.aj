// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sixvu.security;

import com.sixvu.security.PersistentLogins;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PersistentLoginsDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PersistentLoginsDataOnDemand: @Component;
    
    private Random PersistentLoginsDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<PersistentLogins> PersistentLoginsDataOnDemand.data;
    
    public PersistentLogins PersistentLoginsDataOnDemand.getNewTransientPersistentLogins(int index) {
        com.sixvu.security.PersistentLogins obj = new com.sixvu.security.PersistentLogins();
        obj.setLast_used(new Integer(index).longValue());
        java.lang.String series = "series_" + index;
        if (series.length() > 64) {
            series  = series.substring(0, 64);
        }
        obj.setSeries(series);
        java.lang.String token = "token_" + index;
        if (token.length() > 64) {
            token  = token.substring(0, 64);
        }
        obj.setToken(token);
        java.lang.String username = "username_" + index;
        if (username.length() > 64) {
            username  = username.substring(0, 64);
        }
        obj.setUsername(username);
        return obj;
    }
    
    public PersistentLogins PersistentLoginsDataOnDemand.getSpecificPersistentLogins(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        PersistentLogins obj = data.get(index);
        return PersistentLogins.findPersistentLogins(obj.getId());
    }
    
    public PersistentLogins PersistentLoginsDataOnDemand.getRandomPersistentLogins() {
        init();
        PersistentLogins obj = data.get(rnd.nextInt(data.size()));
        return PersistentLogins.findPersistentLogins(obj.getId());
    }
    
    public boolean PersistentLoginsDataOnDemand.modifyPersistentLogins(PersistentLogins obj) {
        return false;
    }
    
    @Transactional(propagation = Propagation.REQUIRES_NEW)
    public void PersistentLoginsDataOnDemand.init() {
        if (data != null && !data.isEmpty()) {
            return;
        }
        
        data = com.sixvu.security.PersistentLogins.findPersistentLoginsEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'PersistentLogins' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.sixvu.security.PersistentLogins>();
        for (int i = 0; i < 10; i++) {
            com.sixvu.security.PersistentLogins obj = getNewTransientPersistentLogins(i);
            obj.persist();
            data.add(obj);
        }
    }
    
}
